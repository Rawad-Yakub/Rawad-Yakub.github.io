{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","map","credit","date","slice","amount","description","id","addCredit","Debits","debits","debit","addDebit","App","logInInfo","newUser","currentUser","event","Date","toJSON","newEntry","debitID","elements","debitList","push","totalDebits","parseInt","console","log","creditID","creditList","totalCredits","a","linkToCreditAPI","axios","get","response","key","data","hasOwnProperty","status","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f7e0d52.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\n        <br/>\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n\n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {\n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;\n","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance'\n\n\nconst Credits = (props) => {\n  // Create the list of Debit items\n  let creditsView = () => {\n    const { credits } = props;\n    return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = credit.date.slice(0,10);\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\n    });\n  }\n\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Credits</h1>\n      {creditsView()}\n\n      <form onSubmit={props.addCredit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br/>\n      <AccountBalance accountBalance={props.accountBalance} />\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance'\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    });\n  }\n\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n      {debitsView()}\n\n      <form onSubmit={props.addDebit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n      <AccountBalance accountBalance={props.accountBalance} />\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Debits;\n","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport axios from 'axios';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super();\n    this.state = {\n      debitID : 1,\n      creditID : 1,\n      accountBalance: 1234567.89,\n      totalCredits : 0,\n      totalDebits : 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {\n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  async componentDidMount(){\n    let linkToDebitAPI = \"https://johnnylaicode.github.io/api/debits.json\"\n    let linkToCreditAPI =\"https://johnnylaicode.github.io/api/credits.json\"\n\n    try{\n      let response = await axios.get(linkToDebitAPI);\n      let response_part_two = await axios.get(linkToCreditAPI)\n      for(var key in response.data){\n        if(response.data.hasOwnProperty(key)) {\n          let newEntry = {\"id\": this.state.debitID, \"description\" : response.data[key].description, \"amount\" : response.data[key].amount, \"date\": response.data[key].date};\n          this.state.debitList.push(newEntry);\n          this.setState({totalDebits: this.state.totalDebits + response.data[key].amount})\n          this.setState({debitID: this.state.debitID + 1});\n        }\n      }\n    }\n    catch(error){\n      if (error.response){\n        console.log(error.response.data);\n        console.log(error.response.status);\n      }\n    }\n\n    try{\n      let response = await axios.get(linkToCreditAPI)\n      for(var key in response.data){\n        if(response.data.hasOwnProperty(key)) {\n          let newEntry = {\"id\": this.state.creditID, \"description\" : response.data[key].description, \"amount\" : response.data[key].amount, \"date\": response.data[key].date};\n          this.state.creditList.push(newEntry);\n          this.setState({totalCredits: this.state.totalCredits + response.data[key].amount})\n          this.setState({creditID: this.state.creditID + 1});\n        }\n      }\n    }\n    catch(error){\n      if (error.response){\n        console.log(error.response.data);\n        console.log(error.response.status);\n      }\n    }\n  }\n\n  //Update state's debitList after \"Add Debit\" button is clicked\n  addDebit = (event) => {\n    event.preventDefault();\n    const date = new Date().toJSON().slice(0, 10);\n    let newEntry = {\"id\": this.state.debitID, \"description\" : event.target.elements.description.value, \"amount\" : event.target.elements.amount.value, \"date\":date};\n    this.state.debitList.push(newEntry);\n    this.setState({totalDebits: this.state.totalDebits + parseInt(event.target.elements.amount.value)})\n    this.setState({debitID: this.state.debitID + 1});\n    console.log(this.state.totalDebits);\n  }\n\n  addCredit = (event) => {\n    event.preventDefault();\n    const date = new Date().toJSON().slice(0, 10);\n    let newEntry = {\"id\": this.state.creditID, \"description\" : event.target.elements.description.value, \"amount\" : event.target.elements.amount.value, \"date\":date};\n    this.state.creditList.push(newEntry);\n    this.setState({totalCredits: this.state.totalCredits + parseInt(event.target.elements.amount.value)})\n    this.setState({creditID: this.state.creditID + 1});\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} accountBalance={this.state.accountBalance} addCredit={this.addCredit} />)\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} accountBalance={this.state.accountBalance} addDebit={this.addDebit} />)\n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/my-react-app\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}