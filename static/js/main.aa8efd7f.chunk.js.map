{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","map","credit","date","slice","amount","description","id","event","addCredit","Debits","debits","debit","addDebit","App","logInInfo","newUser","currentUser","Date","toJSON","debitAmount","parseInt","elements","newDebit","debitID","updatedDebitList","debitList","updatedTotalDebits","totalDebits","updatedAccountBalance","creditAmount","newCredit","creditID","updatedCreditList","creditList","updatedTotalCredits","totalCredits","a","axios","get","key","response","data","hasOwnProperty","newEntry","push","console","log","status","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa8efd7f.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\n        <br/>\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Credits = (props) => {\n  // Create the list of Credit items\n  let creditsView = () => {\n    const { credits } = props;\n    return credits.map((credit) => {\n      let date = credit.date.slice(0, 10);\n      // Use a combination of id and date as the key to ensure uniqueness\n      return <li key={`${credit.id}-${date}`}>{credit.amount} {credit.description} {date}</li>;\n    });\n  };\n\n  // Render the list of Credit items and a form to input new Credit item\n  return (\n    <div>\n      <h1>Credits</h1>\n      {creditsView()}\n\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        props.addCredit(event); // Call the addCredit function from props\n      }}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br/>\n      <AccountBalance accountBalance={props.accountBalance} />\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance'\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    });\n  }\n\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n      {debitsView()}\n\n      <form onSubmit={props.addDebit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n      <AccountBalance accountBalance={props.accountBalance} />\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Debits;\n","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport axios from 'axios';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super();\n    this.state = {\n      debitID : 1,\n      accountBalance: 3000,\n      totalCredits : 0,\n      totalDebits : 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {\n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  async componentDidMount(){\n    let linkToDebitAPI = \"https://johnnylaicode.github.io/api/debits.json\"\n\n    try{\n      let response = await axios.get(linkToDebitAPI);\n      for(var key in response.data){\n        if(response.data.hasOwnProperty(key)) {\n          let newEntry = {\"id\": this.state.debitID, \"description\" : response.data[key].description, \"amount\" : response.data[key].amount, \"date\": response.data[key].date};\n          this.state.debitList.push(newEntry);\n          this.setState({totalDebits: this.state.totalDebits + response.data[key].amount})\n          this.setState({debitID: this.state.debitID + 1});\n        }\n      }\n    }\n    catch(error){\n      if (error.response){\n        console.log(error.response.data);\n        console.log(error.response.status);\n      }\n    }\n  }\n\n  //Update state's debitList after \"Add Debit\" button is clicked\n  addDebit = (event) => {\n    event.preventDefault();\n    const date = new Date().toJSON().slice(0, 10);\n    const debitAmount = parseInt(event.target.elements.amount.value);\n    const newDebit = {\n      id: this.state.debitID,\n      description: event.target.elements.description.value,\n      amount: debitAmount,\n      date: date,\n    };\n    const updatedDebitList = [...this.state.debitList, newDebit];\n    const updatedTotalDebits = this.state.totalDebits + debitAmount;\n    const updatedAccountBalance = this.state.accountBalance - debitAmount;\n\n    // Update state with new debit and updated account balance\n    this.setState({\n      debitList: updatedDebitList,\n      totalDebits: updatedTotalDebits,\n      accountBalance: updatedAccountBalance,\n      debitID: this.state.debitID + 1,\n    });\n  }\n\n  addCredit = (event) => {\n    event.preventDefault();\n    const date = new Date().toJSON().slice(0, 10);\n    const creditAmount = parseInt(event.target.elements.amount.value);\n    const newCredit = {\n      id: this.state.creditID,\n      description: event.target.elements.description.value,\n      amount: creditAmount,\n      date: date,\n    };\n    const updatedCreditList = [...this.state.creditList, newCredit];\n    const updatedTotalCredits = this.state.totalCredits + creditAmount;\n    const updatedAccountBalance = this.state.accountBalance + creditAmount;\n\n    // Update state with new credit and updated account balance\n    this.setState({\n      creditList: updatedCreditList,\n      totalCredits: updatedTotalCredits,\n      accountBalance: updatedAccountBalance,\n      creditID: this.state.creditID + 1,\n    });\n  }\n\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (\n      <Credits credits={this.state.creditList} accountBalance={this.state.accountBalance} addCredit={this.addCredit} />\n    )\n    const DebitsComponent = () => (\n      <Debits debits={this.state.debitList} accountBalance={this.state.accountBalance} addDebit={this.addDebit} />\n    )\n  \n    // Include the \"basename\" in Router for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/my-react-app\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}